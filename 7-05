def h1 (x = []) : # mutable default
    x += [2]
    return x

assert h1()    == [2]
assert h1()    == [2, 2]
assert h1([1]) == [1, 2]
assert h1()    == [2, 2, 2]
assert h1([1]) == [1, 2]


returns pointer to same object with no params
returns pointer to dif object with params

workaround:
def h3 (x = None) :
    if x is None :
        x = []
    x += [2]
    return x

assert h3()     == [2]
assert h3()     == [2]
assert h3([1])  == [1, 2]
assert h3()     == [2]
assert h3([1])  == [1, 2]
assert h3(None) == [2]






def h2 (x = ()) : # immutable default
    x += (2,)
    return x

assert h2()     == (2,)
assert h2()     == (2,)
assert h2((1,)) == (1, 2)
assert h2()     == (2,)
assert h2((1,)) == (1, 2)


default value must come first in python, nondefault values after it as params

rules:
hierarchy dict unpacking:
    position f(2)
    iterunpacking
    name f(x=2)
    dict unpacking

    f(2, *t) and f(*t, 2) = both work

iterable unpacking
    iterable unpacking    
    name f(x=2)
    
